name: changelog and release automation
on:
  push:
    branches:
      - master

jobs:
  changelog:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[RELEASE]')"
    steps:
      - uses: actions/checkout@master
      - name: calculate next version
        id: version
        uses: patrickjahns/version-drafter-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: update changelog
        uses: patrickjahns/chlgr@v1
        with:
          release-version: ${{ steps.version.outputs.next-version }}

  release:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[RELEASE]')"
    steps:
      - uses: actions/checkout@master

      - name: extract version from commit message
        shell: bash
        run: |
          VERSION=$(echo "${COMMIT_MSG}" | grep -Po '\d+.\d+.\d+')
          CHANGELOG=$(cat CHANGELOG.md | sed -n '/^## \[/{p; :loop n; /^## \[/q; p; b loop}')
          CHANGELOG="${CHANGELOG%??}"
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "changelog=${CHANGELOG}" >> $GITHUB_OUTPUT
        env:
          COMMIT_MSG: ${{ github.event.head_commit.message }}
        id: version

      - name: create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NOTES: ${{ steps.version.outputs.changelog }}
          RELEASE_TAG: ${{ steps.version.outputs.version }}
        run: |
          gh release create "${GITHUB_TOKEN}" -n "${RELEASE_NOTES}

      - name: galaxy
        uses: robertdebock/galaxy-action@1.2.1
        with:
          galaxy_api_key: ${{ secrets.galaxy_api_key }}
